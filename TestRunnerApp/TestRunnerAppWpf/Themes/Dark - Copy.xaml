<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    >

    <SolidColorBrush x:Key="CaretBrush" Color="White" />
    <SolidColorBrush x:Key="AlternateColorBrush" Color="DarkSlateBlue" />

    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="#FF333333" />
    
    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="MidnightBlue " />
    <SolidColorBrush x:Key="ProgressBarForegroundBrush" Color="DarkSlateBlue" />
    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="Black" />

    <!--Buttons-->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="MidnightBlue" />
    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="WhiteSmoke" />  
    
    <!--ToolBar, MenuBar-->
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="MenuBorderBrush" Color="Black" />

    <!--Datagrid column header -->
    <SolidColorBrush x:Key="DataGridHeaderSortedBackgroundBrush" Color="#FF375D5D" />
    <SolidColorBrush x:Key="DataGridHeaderSortedBorderBrush" Color="#00315252" />    <!-- DarkSlateGray: #FF2F4F4F-->
    <SolidColorBrush x:Key="DataGridHeaderBackgroundBrush" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="DataGridHeaderMouseOverBackgroundBrush" Color="#88FF8C00" />
    <SolidColorBrush x:Key="DataGridHeaderBorderBrush" Color="DarkSlateGray" />
    <!--Datagrid row header -->
    <SolidColorBrush x:Key="RowHeaderBackgroundBrush" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="RowHeaderBorderBrush" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="RowHeaderIsMouseOverBrush" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="RowBackgroundSelectedBrush" Color="#FF333333" />

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboStyle">
        <Setter Property="FontSize" Value="12" />
        <!--<Setter Property="FontWeight" Value="Bold" />-->
        <!--<Setter Property="VerticalAlignment" Value="Bottom" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <Setter Property="Foreground" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
    </Style>
    
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="ComboItemStyle">
        <Setter Property="FontSize" Value="12" />
        <!--<Setter Property="FontWeight" Value="Bold" />-->
        <!--<Setter Property="VerticalAlignment" Value="Bottom" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Style.Triggers>
            <DataTrigger Binding ="{Binding enabled}" Value="False">
                <Setter Property="ComboBoxItem.Focusable" Value="False"/>
                <Setter Property="ComboBoxItem.IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type DataGrid}" >
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="#00FFFFFF" />
        <Setter Property="HorizontalGridLinesBrush" Value="#00FFFFFF" />
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Name="ButtonStyle">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
    </Style>
    
    <Style TargetType="{x:Type StatusBar}" >
        <Setter Property="Background" Value="{DynamicResource StatusBarBackgroundBrush}" />
    </Style>

    <!--<Style TargetType="{x:Type ProgressBar}" >
        <Setter Property="Background" Value="{DynamicResource ProgressBarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ProgressBarForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ProgressBarBorderBrush}" />
    </Style>-->
    
   
    <!--ToolBar-->
    <Style TargetType="{x:Type ToolBar}" >
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>                                                  
    <Style TargetType="{x:Type ToolBarTray}" >                
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>                                                  
    <Style TargetType="{x:Type ToolBarOverflowPanel}" >       
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>                                                  
    <Style TargetType="{x:Type ToolBarPanel}" >               
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>
    <!--end ToolBar-->

   



    <Style TargetType="{x:Type Menu}"  >
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>
    <Style TargetType="{x:Type MenuItem}" >
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
    </Style>   
    <!--MenuItem-->
    <ControlTemplate x:Key="MenuItemControlTemplateCustom" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" 
                                  Content="{TemplateBinding Icon}" ContentSource="Icon"
                                  HorizontalAlignment="Center" Height="16" Margin="3"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      Fill="{TemplateBinding Foreground}" 
                      FlowDirection="LeftToRight" Margin="3" 
                      Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  Content="{TemplateBinding Header}" Grid.Column="1"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                  ContentSource="Header" Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True" Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       Placement="Bottom">
                    <Border x:Name="SubMenuBorder" 
                            BorderBrush="Black" BorderThickness="1" 
                            Background="#FF333333" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" 
                                        VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" 
                                               Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="White" HorizontalAlignment="Left" 
                                           Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" 
                        Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" 
                        Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--end MenuItem-->

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="Thumb" >
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="FrameworkElement.Width">
            <Setter.Value>
                <s:Double>8</s:Double>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
                <Cursor>SizeWE</Cursor>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Thumb" x:Key="RowHeaderGripperStyle">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="FrameworkElement.Height">
            <Setter.Value>
                <s:Double>8</s:Double>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
                <Cursor>SizeNS</Cursor>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ColumnHeader-->
    <Style x:Key="DatagridColumnHeaderTemplateStyle" 
         TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,1" 
                              Background="{StaticResource DataGridHeaderSortedBackgroundBrush}" 
                              BorderBrush="{StaticResource DataGridHeaderSortedBorderBrush}" 
                              Grid.ColumnSpan="2" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                            Grid.Column="0" Width="8" Height="6" Fill="White" Margin="0,0,0,20" 
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />

                        <!-- Separator lines -->
                        <Rectangle Width="1" Fill="#0000C377" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                        <Rectangle Width="1" Margin="0,0,1,0" Fill="#00425B10" 
                                   
                                 HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
                             Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
                             Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" 
                                  Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush"  
                                  Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="BackgroundBorder" 
                                  Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="BackgroundBorder" 
                                  Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" 
                                  Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" 
                                  Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" 
                                  TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end ColumnHeader-->

    <!--RowHeader-->
    <Style x:Key="DataGridRowHeaderTemplateStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{StaticResource RowHeaderBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid >
                        <mwt:DataGridHeaderBorder IsSelected="{TemplateBinding IsRowSelected}"
                                 IsHovered ="{TemplateBinding IsMouseOver}"
                                 IsPressed="{TemplateBinding IsPressed}"
                                 BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                    Path=HorizontalGridLinesBrush}"
                                 Background="{TemplateBinding Background}"                                     
                                 BorderThickness="5,3,0,3"
                                 Padding ="{TemplateBinding Padding}"
                                 Orientation="Horizontal"
                                                  Visibility="Visible"
                                 SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                 SeparatorBrush="{TemplateBinding SeparatorBrush}" Margin="-2,-3,0,-3">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center"/>
                                <!--<Control SnapsToDevicePixels="false"
                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                        Path=(Validation.HasError),
                                       Converter={StaticResource BoolToVisi}}"
                                       Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                        Path=ValidationErrorTemplate}" />-->
                            </StackPanel>
                        </mwt:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top" Height="3"
                               Style="{StaticResource RowHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom" Height="3"
                               Style="{StaticResource RowHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource RowHeaderIsMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end RowHeader-->
    
    

    <!--Expander-->
    <ControlTemplate x:Key="ExpanderControlTemplateCustom" TargetType="{x:Type Expander}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                    <ToggleButton.FocusVisualStyle>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.FocusVisualStyle>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Ellipse x:Name="circle" Fill="DarkGray" HorizontalAlignment="Center" Height="19" Stroke="Black" VerticalAlignment="Center" Width="19"/>
                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="WhiteSmoke" StrokeThickness="2" VerticalAlignment="Center"/>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#BBFF8C00"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#BBFF8C00"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                <Setter Property="Style" TargetName="HeaderSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="19"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-90"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="circle" Fill="Blue" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                <Setter Property="Fill" TargetName="circle" Value="DarkOrange"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                <Setter Property="Style" TargetName="HeaderSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="180"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                <Setter Property="Fill" TargetName="circle" Value="DarkOrange"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                <Setter Property="Style" TargetName="HeaderSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="19"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="90"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="circle" Fill="Blue" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                <Setter Property="Fill" TargetName="circle" Value="DarkOrange"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- end Expander-->

    <!--SystemColors redefined-->
    <!--Light-->
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey }" Color="#FF333333" />    <!--DataGrid unused space-->
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey }" Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }" Color="WhiteSmoke" />    <!--Selected row text-->
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrushKey }" Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="#FF333333" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InfoBrushKey }" Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey }" Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey }" Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="MidnightBlue" /> <!--Grid, Textblock, Datagrid row-->

    <!--Dark-->
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey }" Color="AntiqueWhite" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey }" Color="AliceBlue" />   <!-- ? -->
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey }" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="{x:Static SystemColors.DesktopBrushKey }" Color="AntiqueWhite" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrushKey }" Color="AntiqueWhite" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey }" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey }" Color="AntiqueWhite" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey }" Color="AntiqueWhite" />
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="WhiteSmoke" />

    <!--Gray-->
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey }" Color="Gray" />
    <SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrushKey }" Color="Gray" />    <!-- ? -->
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey }" Color="Gray" />    <!-- ? -->
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey }" Color="DarkGray" />    <!-- ? -->
    <SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey }" Color="Gray" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrushKey }" Color="AliceBlue" />    <!-- ? -->
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrushKey }" Color="Gray" />    <!-- ? -->

    <!--Blue-->
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey }" Color="Blue" />
    <SolidColorBrush x:Key="{x:Static SystemColors.GradientActiveCaptionBrushKey }" Color="Blue" />
    <SolidColorBrush x:Key="{x:Static SystemColors.GradientInactiveCaptionBrushKey }" Color="Blue" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey }" Color="#99550000" />    <!-- DataGrid selected row-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrushKey }" Color="Orange" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey }" Color="Blue" />
    <!--end SystemColors redefined-->

    <!--ComboBox-->
    <Style TargetType="{x:Type ComboBox}" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:s="clr-namespace:System;assembly=mscorlib" 
           xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           x:Key="ComboBoxCustomTemplate">
        <Style.Triggers>
            <Trigger Property="ComboBox.IsEditable">
                <Setter Property="KeyboardNavigation.IsTabStop">
                    <Setter.Value>
                        <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Padding">
                    <Setter.Value>
                        <Thickness>2,2,2,2</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid Name="templateRoot" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Grid.ColumnSpan="2">
                                    <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
                                            <ScrollViewer Name="DropDownScrollViewer">
                                                <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </mwt:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                                <Setter.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="KeyboardNavigation.IsTabStop">
                                                <Setter.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="UIElement.Focusable">
                                                <Setter.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ButtonBase.ClickMode">
                                                <Setter.Value>
                                                    <x:Static Member="ClickMode.Press" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="#FFACACAC" Name="templateRoot" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                                                                        <GradientStop Color="#FFE5E5E5" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                                                                <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" Name="Arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFABADB3</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="UIElement.IsMouseOver">
                                                                <Setter Property="Shape.Fill" TargetName="Arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>WhiteSmoke</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Color="#FFECF4FC" Offset="0" />
                                                                                <GradientStop Color="#FFDCECFC" Offset="1" />
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Color="#FFEBF4FC" Offset="0" />
                                                                                <GradientStop Color="#FFDCECFC" Offset="1" />
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="ButtonBase.IsPressed">
                                                                <Setter Property="Shape.Fill" TargetName="Arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>WhiteSmoke</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Color="#FFDAECFC" Offset="0" />
                                                                                <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Color="#FFDAEBFC" Offset="0" />
                                                                                <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="UIElement.IsEnabled">
                                                                <Setter Property="Shape.Fill" TargetName="Arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                                    <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border Background="#FFFFFFFF" Name="Border" Margin="{TemplateBinding Border.BorderThickness}">
                                    <!--<TextBox IsReadOnly="False" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" xml:space="preserve"><TextBox.Style><Style TargetType="TextBox"><Style.Triggers><DataTrigger Binding="{Binding Path=(msi:FrameworkAppContextSwitches.UseLegacyAccessibilityFeatures)}" Value="false" xmlns:msi="clr-namespace:MS.Internal;assembly=PresentationFramework"><Setter Property="AutomationProperties.Name"><Setter.Value><Binding Path="(AutomationProperties.Name)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter><Setter Property="AutomationProperties.LabeledBy"><Setter.Value><Binding Path="(AutomationProperties.LabeledBy)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter><Setter Property="AutomationProperties.HelpText"><Setter.Value><Binding Path="(AutomationProperties.HelpText)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter></DataTrigger></Style.Triggers><Style.Resources><ResourceDictionary /></Style.Resources><Setter Property="FrameworkElement.OverridesDefaultStyle"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="UIElement.AllowDrop"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="FrameworkElement.MinWidth"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.MinHeight"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.FocusVisualStyle"><Setter.Value><x:Null /></Setter.Value></Setter><Setter Property="ScrollViewer.PanningMode"><Setter.Value><x:Static Member="PanningMode.VerticalFirst" /></Setter.Value></Setter><Setter Property="Stylus.IsFlicksEnabled"><Setter.Value><s:Boolean>False</s:Boolean></Setter.Value></Setter><Setter Property="Control.Template"><Setter.Value><ControlTemplate TargetType="TextBox"><ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></Setter.Value></Setter></Style></TextBox.Style></TextBox>-->
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter Property="UIElement.Opacity" TargetName="Border">
                                        <Setter.Value>
                                            <s:Double>0.56</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocusWithin">
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF000000</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                                    <Setter Property="FrameworkElement.Margin" TargetName="shadow">
                                        <Setter.Value>
                                            <Thickness>0,0,5,5</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
                                        <Setter.Value>
                                            <Color>#71000000</Color>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ItemsControl.HasItems">
                                    <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder">
                                        <Setter.Value>
                                            <s:Double>95</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemsControl.IsGrouping">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                                            <Condition.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                                        <Setter.Value>
                                            <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                                        <Setter.Value>
                                            <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="IFrameworkInputElement">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                        <GradientStop Color="#FFE5E5E5" Offset="1" />
                        <!--<GradientStop Color="Red" Offset="0" />
                        <GradientStop Color="Blue" Offset="1" />-->
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>#FFACACAC</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.WindowTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>6,3,5,3</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
            <Setter.Value>
                <s:Boolean>True</s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode">
            <Setter.Value>
                <x:Static Member="PanningMode.Both" />
            </Setter.Value>
        </Setter>
        <Setter Property="Stylus.IsFlicksEnabled">
            <Setter.Value>
                <s:Boolean>False</s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
                            <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
                                    <ScrollViewer Name="DropDownScrollViewer">
                                        <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </mwt:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                        <Setter.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="KeyboardNavigation.IsTabStop">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ButtonBase.ClickMode">
                                        <Setter.Value>
                                            <x:Static Member="ClickMode.Press" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="#FFACACAC" Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <!--!!!! normal  !!!-->
                                                                <GradientStop Color="MidnightBlue" Offset="0" />
                                                                <GradientStop Color="DarkSlateGray" Offset="1" />

                                                                <!--<GradientStop Color="#FFF0F0F0" Offset="0" />
                                                                <GradientStop Color="#FFE5E5E5" Offset="1" />-->
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                                                        <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="WhiteSmoke" Name="Arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>Red</SolidColorBrush>
                                                                <!--<SolidColorBrush>#FFFFFFFF</SolidColorBrush>-->
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFABADB3</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Panel.Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>Red</SolidColorBrush>
                                                                <!--<SolidColorBrush>#00FFFFFF</SolidColorBrush>-->
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="UIElement.IsMouseOver">
                                                        <Setter Property="Shape.Fill" TargetName="Arrow">
                                                            <Setter.Value>
                                                                <SolidColorBrush>WhiteSmoke</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
 <!--!!!! Mouse over !!!-->
                                                                        <GradientStop Color="DarkSlateBlue" Offset="0" />
                                                                        <GradientStop Color="MidnightBlue" Offset="1" />
                                                                        <!--<GradientStop Color="#FFECF4FC" Offset="0" />
                                                                        <GradientStop Color="#FFDCECFC" Offset="1" />-->
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>Red</SolidColorBrush>
                                                                <!--<SolidColorBrush>#FFFFFFFF</SolidColorBrush>-->
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Panel.Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFEBF4FC" Offset="0" />
                                                                        <GradientStop Color="#FFDCECFC" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="ButtonBase.IsPressed">
                                                        <Setter Property="Shape.Fill" TargetName="Arrow">
                                                            <Setter.Value>
                                                                <SolidColorBrush>WhiteSmoke</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
 <!--!!!! Pressed !!!-->
                                                                        <GradientStop Color="DarkSlateBlue" Offset="0" />
                                                                        <GradientStop Color="MidnightBlue" Offset="1" />
                                                                        <!--<GradientStop Color="#FFDAECFC" Offset="0" />
                                                                        <GradientStop Color="#FFC4E0FC" Offset="1" />-->
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>WhiteSmoke</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Panel.Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFDAEBFC" Offset="0" />
                                                                        <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="UIElement.IsEnabled">
                                                        <Setter Property="Shape.Fill" TargetName="Arrow">
                                                            <Setter.Value>
                                                                <SolidColorBrush>White</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>False</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Panel.Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                            <Setter Property="FrameworkElement.Margin" TargetName="shadow">
                                <Setter.Value>
                                    <Thickness>0,0,5,5</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
                                <Setter.Value>
                                    <Color>#71000000</Color>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems">
                            <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder">
                                <Setter.Value>
                                    <s:Double>95</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.IsGrouping">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                                    <Condition.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll">
                                <Setter.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                                <Setter.Value>
                                    <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                                <Setter.Value>
                                    <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end ComboBox-->

  

</ResourceDictionary>