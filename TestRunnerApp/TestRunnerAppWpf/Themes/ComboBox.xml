<Style TargetType="ComboBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style.Triggers>
    <Trigger Property="ComboBox.IsEditable">
      <Setter Property="KeyboardNavigation.IsTabStop">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Padding">
        <Setter.Value>
          <Thickness>2,2,2,2</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBox">
            <Grid Name="templateRoot" SnapsToDevicePixels="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
              </Grid.ColumnDefinitions>
              <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Grid.ColumnSpan="2">
                <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                  <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
                    <ScrollViewer Name="DropDownScrollViewer">
                      <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                        <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                          <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                        </Canvas>
                        <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                      </Grid>
                    </ScrollViewer>
                  </Border>
                </mwt:SystemDropShadowChrome>
              </Popup>
              <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
                <ToggleButton.Style>
                  <Style TargetType="ToggleButton">
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                      <Setter.Value>
                        <s:Boolean>True</s:Boolean>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="KeyboardNavigation.IsTabStop">
                      <Setter.Value>
                        <s:Boolean>False</s:Boolean>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="UIElement.Focusable">
                      <Setter.Value>
                        <s:Boolean>False</s:Boolean>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="ButtonBase.ClickMode">
                      <Setter.Value>
                        <x:Static Member="ClickMode.Press" />
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="#FFACACAC" Name="templateRoot" SnapsToDevicePixels="True">
                            <Border.Background>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFF0F0F0" Offset="0" />
                                  <GradientStop Color="#FFE5E5E5" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Border.Background>
                            <Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                              <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" Name="Arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                          </Border>
                          <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFABADB3</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Panel.Background" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsMouseOver">
                              <Setter Property="Shape.Fill" TargetName="Arrow">
                                <Setter.Value>
                                  <SolidColorBrush>#FF000000</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                              </Trigger.Value>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                      <GradientStop Color="#FFECF4FC" Offset="0" />
                                      <GradientStop Color="#FFDCECFC" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                  </LinearGradientBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Panel.Background" TargetName="splitBorder">
                                <Setter.Value>
                                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                      <GradientStop Color="#FFEBF4FC" Offset="0" />
                                      <GradientStop Color="#FFDCECFC" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                  </LinearGradientBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <Trigger Property="ButtonBase.IsPressed">
                              <Setter Property="Shape.Fill" TargetName="Arrow">
                                <Setter.Value>
                                  <SolidColorBrush>#FF000000</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                              </Trigger.Value>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                      <GradientStop Color="#FFDAECFC" Offset="0" />
                                      <GradientStop Color="#FFC4E0FC" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                  </LinearGradientBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Panel.Background" TargetName="splitBorder">
                                <Setter.Value>
                                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                      <GradientStop Color="#FFDAEBFC" Offset="0" />
                                      <GradientStop Color="#FFC4E0FC" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                  </LinearGradientBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled">
                              <Setter Property="Shape.Fill" TargetName="Arrow">
                                <Setter.Value>
                                  <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                              </Trigger.Value>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Panel.Background" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                  <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Panel.Background" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                <Setter.Value>
                                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                              </Setter>
                            </MultiDataTrigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ToggleButton.Style>
              </ToggleButton>
              <Border Background="#FFFFFFFF" Name="Border" Margin="{TemplateBinding Border.BorderThickness}">
                <TextBox IsReadOnly="False" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" xml:space="preserve"><TextBox.Style><Style TargetType="TextBox"><Style.Triggers><DataTrigger Binding="{Binding Path=(msi:FrameworkAppContextSwitches.UseLegacyAccessibilityFeatures)}" Value="false" xmlns:msi="clr-namespace:MS.Internal;assembly=PresentationFramework"><Setter Property="AutomationProperties.Name"><Setter.Value><Binding Path="(AutomationProperties.Name)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter><Setter Property="AutomationProperties.LabeledBy"><Setter.Value><Binding Path="(AutomationProperties.LabeledBy)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter><Setter Property="AutomationProperties.HelpText"><Setter.Value><Binding Path="(AutomationProperties.HelpText)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}" /></Setter.Value></Setter></DataTrigger></Style.Triggers><Style.Resources><ResourceDictionary /></Style.Resources><Setter Property="FrameworkElement.OverridesDefaultStyle"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="UIElement.AllowDrop"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="FrameworkElement.MinWidth"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.MinHeight"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.FocusVisualStyle"><Setter.Value><x:Null /></Setter.Value></Setter><Setter Property="ScrollViewer.PanningMode"><Setter.Value><x:Static Member="PanningMode.VerticalFirst" /></Setter.Value></Setter><Setter Property="Stylus.IsFlicksEnabled"><Setter.Value><s:Boolean>False</s:Boolean></Setter.Value></Setter><Setter Property="Control.Template"><Setter.Value><ControlTemplate TargetType="TextBox"><ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></Setter.Value></Setter></Style></TextBox.Style></TextBox>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsEnabled">
                <Setter Property="UIElement.Opacity" TargetName="Border">
                  <Setter.Value>
                    <s:Double>0.56</s:Double>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>False</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="UIElement.IsKeyboardFocusWithin">
                <Setter Property="TextElement.Foreground">
                  <Setter.Value>
                    <SolidColorBrush>#FF000000</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                <Setter Property="FrameworkElement.Margin" TargetName="shadow">
                  <Setter.Value>
                    <Thickness>0,0,5,5</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
                  <Setter.Value>
                    <Color>#71000000</Color>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="ItemsControl.HasItems">
                <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder">
                  <Setter.Value>
                    <s:Double>95</s:Double>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>False</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ItemsControl.IsGrouping">
                    <Condition.Value>
                      <s:Boolean>True</s:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                    <Condition.Value>
                      <s:Boolean>False</s:Boolean>
                    </Condition.Value>
                  </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                  <Setter.Value>
                    <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                  <Setter.Value>
                    <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>False</s:Boolean>
                </Trigger.Value>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </Style.Triggers>
  <Style.Resources>
    <ResourceDictionary />
  </Style.Resources>
  <Setter Property="FrameworkElement.FocusVisualStyle">
    <Setter.Value>
      <Style TargetType="IFrameworkInputElement">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Setter.Value>
  </Setter>
  <Setter Property="Panel.Background">
    <Setter.Value>
      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
          <GradientStop Color="#FFF0F0F0" Offset="0" />
          <GradientStop Color="#FFE5E5E5" Offset="1" />
        </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>
    </Setter.Value>
  </Setter>
  <Setter Property="Border.BorderBrush">
    <Setter.Value>
      <SolidColorBrush>#FFACACAC</SolidColorBrush>
    </Setter.Value>
  </Setter>
  <Setter Property="TextElement.Foreground">
    <Setter.Value>
      <DynamicResource ResourceKey="{x:Static SystemColors.WindowTextBrushKey}" />
    </Setter.Value>
  </Setter>
  <Setter Property="Border.BorderThickness">
    <Setter.Value>
      <Thickness>1,1,1,1</Thickness>
    </Setter.Value>
  </Setter>
  <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
    <Setter.Value>
      <x:Static Member="ScrollBarVisibility.Auto" />
    </Setter.Value>
  </Setter>
  <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
    <Setter.Value>
      <x:Static Member="ScrollBarVisibility.Auto" />
    </Setter.Value>
  </Setter>
  <Setter Property="Control.Padding">
    <Setter.Value>
      <Thickness>6,3,5,3</Thickness>
    </Setter.Value>
  </Setter>
  <Setter Property="ScrollViewer.CanContentScroll">
    <Setter.Value>
      <s:Boolean>True</s:Boolean>
    </Setter.Value>
  </Setter>
  <Setter Property="ScrollViewer.PanningMode">
    <Setter.Value>
      <x:Static Member="PanningMode.Both" />
    </Setter.Value>
  </Setter>
  <Setter Property="Stylus.IsFlicksEnabled">
    <Setter.Value>
      <s:Boolean>False</s:Boolean>
    </Setter.Value>
  </Setter>
  <Setter Property="Control.Template">
    <Setter.Value>
      <ControlTemplate TargetType="ComboBox">
        <Grid Name="templateRoot" SnapsToDevicePixels="True">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
          </Grid.ColumnDefinitions>
          <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
            <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
              <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
                <ScrollViewer Name="DropDownScrollViewer">
                  <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                    <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                      <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                    </Canvas>
                    <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </mwt:SystemDropShadowChrome>
          </Popup>
          <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
            <ToggleButton.Style>
              <Style TargetType="ToggleButton">
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="FrameworkElement.OverridesDefaultStyle">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="KeyboardNavigation.IsTabStop">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Focusable">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="ButtonBase.ClickMode">
                  <Setter.Value>
                    <x:Static Member="ClickMode.Press" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="#FFACACAC" Name="templateRoot" SnapsToDevicePixels="True">
                        <Border.Background>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFF0F0F0" Offset="0" />
                              <GradientStop Color="#FFE5E5E5" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Border.Background>
                        <Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                          <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" Name="Arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                      </Border>
                      <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFABADB3</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="Shape.Fill" TargetName="Arrow">
                            <Setter.Value>
                              <SolidColorBrush>#FF000000</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFECF4FC" Offset="0" />
                                  <GradientStop Color="#FFDCECFC" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background" TargetName="splitBorder">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFEBF4FC" Offset="0" />
                                  <GradientStop Color="#FFDCECFC" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="Shape.Fill" TargetName="Arrow">
                            <Setter.Value>
                              <SolidColorBrush>#FF000000</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFDAECFC" Offset="0" />
                                  <GradientStop Color="#FFC4E0FC" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FF569DE5</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FF569DE5</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background" TargetName="splitBorder">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFDAEBFC" Offset="0" />
                                  <GradientStop Color="#FFC4E0FC" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FF569DE5</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="Shape.Fill" TargetName="Arrow">
                            <Setter.Value>
                              <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                            <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Panel.Background" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                            <Setter.Value>
                              <SolidColorBrush>#FFBFBFBF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                            <Setter.Value>
                              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                        </MultiDataTrigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </ToggleButton.Style>
          </ToggleButton>
          <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
            <Setter Property="FrameworkElement.Margin" TargetName="shadow">
              <Setter.Value>
                <Thickness>0,0,5,5</Thickness>
              </Setter.Value>
            </Setter>
            <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
              <Setter.Value>
                <Color>#71000000</Color>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>True</s:Boolean>
            </Trigger.Value>
          </Trigger>
          <Trigger Property="ItemsControl.HasItems">
            <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder">
              <Setter.Value>
                <s:Double>95</s:Double>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="ItemsControl.IsGrouping">
                <Condition.Value>
                  <s:Boolean>True</s:Boolean>
                </Condition.Value>
              </Condition>
              <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                <Condition.Value>
                  <s:Boolean>False</s:Boolean>
                </Condition.Value>
              </Condition>
            </MultiTrigger.Conditions>
            <Setter Property="ScrollViewer.CanContentScroll">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
          </MultiTrigger>
          <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
            <Setter Property="Canvas.Top" TargetName="OpaqueRect">
              <Setter.Value>
                <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
              </Setter.Value>
            </Setter>
            <Setter Property="Canvas.Left" TargetName="OpaqueRect">
              <Setter.Value>
                <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>