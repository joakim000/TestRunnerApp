<Window x:Class="TestRunnerAppWpf.NewTestDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestRunnerAppWpf"
        mc:Ignorable="d"
        Title="Add new test" Height="450" Width="800"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterOwner"
        Icon="pack://application:,,,/Icons/Test_16x.png"
        ContentRendered="Window_ContentRendered"
        Margin="5,5,5,5"
 >

    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="340" /> 
            <Setter Property="Margin" Value="0,0,0,15" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid Background="{DynamicResource MenuBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
    <StackPanel>
        <Label Content="Description" FontSize="16" FontWeight="Bold" Margin="3,0,0,0"/>

        <Grid Margin="15,0,15,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

                <StackPanel Grid.Column="1" Grid.Row="0">
                   
                    <Label Grid.Column="1" Grid.Row="0" Content="ID" />
                    <TextBox Grid.Column="1" Grid.Row="1" Width="350"
                     Text="{Binding Path=newItem.id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
                </StackPanel>


                

            <Label Grid.Column="1" Grid.Row="2" Content="Name" />
            <TextBox Grid.Column="1" Grid.Row="3" Width="350"
                     Text="{Binding Path=newItem.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
            
            <Label Grid.Column="1" Grid.Row="4" Content="Priority" />
            <TextBox Grid.Column="1" Grid.Row="5" Width="350"
                     Text="{Binding Path=newItem.prio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <StackPanel Grid.Column="1" Grid.Row="6">
                <Label Grid.Column="1" Grid.Row="6" Content="Objective" />
                <TextBox Grid.Column="1" Grid.Row="7" Width="350" AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                     Text="{Binding Path=newItem.objective, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                />
                
            </StackPanel>
            
            
            <Label Grid.Column="1" Grid.Row="12" Content="Notes" />
            <TextBox Grid.Column="1" Grid.Row="13" Width="350" AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
            
        </Grid>
        </StackPanel>
        <StackPanel Grid.Column="1">
            <Label Content="Execution" FontSize="16" FontWeight="Bold" Margin="3,0,0,0"/>

            <Label Grid.Column="1" Grid.Row="6" Content="Pre-conditions" />
            <TextBox Grid.Column="1" Grid.Row="7" Width="350" AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descPrecond, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                />

            <Label Grid.Column="1" Grid.Row="8" Content="Execution steps" Margin="0,0,0,0"/>
            <TextBox Grid.Column="1" Grid.Row="9" Width="350" AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descExecution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Grid.Column="1" Grid.Row="10" Content="Expected result" />
            <TextBox Grid.Column="1" Grid.Row="11" Width="350" AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descExpected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

        </StackPanel>

        <StackPanel Grid.Column="2">
            <Label Content="Test" FontSize="16" FontWeight="Bold" Margin="3,0,0,0"/>

        <Grid Margin="15,0,15,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="100" />
            </Grid.RowDefinitions>

            <Label Grid.Column="1" Grid.Row="0" Content="Assembly" />
            <TextBox Grid.Column="1" Grid.Row="1" Width="350"
                     Text="{Binding Path=newItem.callAss, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Grid.Column="1" Grid.Row="2" Content="Namespace" />
            <TextBox Grid.Column="1" Grid.Row="3" Width="350"
                     Text="{Binding Path=newItem.callSpace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Grid.Column="1" Grid.Row="4" Content="Type" />
            <TextBox Grid.Column="1" Grid.Row="5" Width="350"
                     Text="{Binding Path=newItem.callType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

                <Button Grid.Column="1" Grid.Row="6" Content="Add test data" Command="{Binding newItem.AddTestDataCmd}" Width="350" />
                <DataGrid Grid.Column="1" Grid.Row="7" Width="350"  MinHeight="150"
                       ItemsSource="{Binding newItem.testDataColl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                       AutoGenerateColumns="False"         
                       x:Name="testDataGrid"
                       IsReadOnly="False"
                       CanUserAddRows="True"
                       RowDetailsVisibilityMode="Collapsed"
                       AlternatingRowBackground="{DynamicResource AlternateColorBrush}" 
                       AlternationCount="2"
                       ColumnHeaderStyle="{DynamicResource DatagridColumnHeaderTemplateStyle}"
                       RowHeaderStyle="{DynamicResource DataGridRowHeaderTemplateStyle}"
              
            >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Index" Binding="{Binding index, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Test data" Binding="{Binding data, UpdateSourceTrigger=PropertyChanged}" Width="*" MinWidth="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

                <!--<Label Grid.Column="1" Grid.Row="8" Content="Test data 1" />
            <TextBox Grid.Column="1" Grid.Row="9" Width="350"
                     Text="{Binding Path=newItem.testData[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
            
            <Label Grid.Column="1" Grid.Row="10" Content="Test data 2" />
            <TextBox Grid.Column="1" Grid.Row="11" Width="350"
                     Text="{Binding Path=newItem.testData[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
            
            <Label Grid.Column="1" Grid.Row="12" Content="Test data 3" />
            <TextBox Grid.Column="1" Grid.Row="13" Width="350"
                     Text="{Binding Path=newItem.testData[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
            
            <Label Grid.Column="1" Grid.Row="14" Content="Test data 4" />
            <TextBox Grid.Column="1" Grid.Row="15" Width="350"
                     Text="{Binding Path=newItem.testData[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />-->
           
            <!--<Label Grid.Column="1" Grid.Row="10" Content="Use Web driver" />-->
            <!--<TextBox Grid.Column="1" Grid.Row="11" Width="350"
                    Text="{Binding Path=webDriver, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />-->
                <!--<CheckBox Grid.Column="1" Grid.Row="11" IsChecked="{Binding useWebDriver}" Margin="15,0,0,0" />-->


            <WrapPanel Grid.Row="16" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0" >
                    <StackPanel HorizontalAlignment="Left" Margin="0,0,60,3">
                        <Label Content="Import Jira case" HorizontalAlignment="Left" />
                        <ComboBox x:Name="CasesCombo" Style="{StaticResource ComboStyle}"
                                  Width="150" HorizontalAlignment="Left" Margin="0,0,10,0" Padding="10,2,10,2"
                                  ItemContainerStyle="{StaticResource ComboItemStyle}"     
                                  SelectedItem="{Binding jiraSelectedCase, 
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                                  ItemsSource="{Binding jiraProject.cases,  Mode=OneWay, NotifyOnSourceUpdated=True}">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding key}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    </StackPanel>
                    <Button IsDefault="True" Height="30" VerticalAlignment="Bottom"  Name="btnDialogOk" Click="btnDialogOk_Click" MinWidth="60" Margin="0,0,10,0">_Ok</Button>
                <Button IsCancel="True" Height="30" VerticalAlignment="Bottom" MinWidth="60">_Cancel</Button>
            </WrapPanel>
        </Grid>
        </StackPanel>
    </Grid>
</Window>
