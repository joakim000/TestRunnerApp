<Window x:Class="TestRunnerAppWpf.NewTestDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestRunnerAppWpf"
        mc:Ignorable="d"
        Title="Add new test" Height="450" Width="800"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterOwner"
        Icon="pack://application:,,,/Icons/Test_16x.png"
        ContentRendered="Window_ContentRendered"
        Margin="5,5,5,5"
 >

    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="300" /> 
            <Setter Property="Margin" Value="0,0,0,15" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid Background="{DynamicResource MenuBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Margin="15,10,15,15" Grid.Column="0" >
            <Label Content="Description" FontSize="16" FontWeight="Bold" Margin="3,0,0,0"/>

            <Label Content="ID" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}" />
            <TextBox 
                     Text="{Binding Path=newItem.id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />

            <Label Content="Name" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}" />
            <TextBox 
                     Text="{Binding Path=newItem.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />
            
            <Label Content="Objective" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}" />
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.objective, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />

            <Label Content="Priority" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}"  />
            <TextBox 
                     Text="{Binding Path=newItem.prio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />
            <ComboBox x:Name="PrioCombo" Template="{DynamicResource ComboBoxControlCustom}"
                                  Width="150" HorizontalAlignment="Left" Margin="0,0,10,15" Padding="10,2,10,2"
                                  SelectedItem="{Binding newItem.jiraCase.priority, 
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                                  ItemsSource="{Binding mainViewModel.gridViewModel.suite.jiraProject.prios,  Mode=OneWay, NotifyOnSourceUpdated=True}">

                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Label Content="Status" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}"  />
            <TextBox 
                     Text="{Binding Path=newItem.jiraCase.status.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />
            <ComboBox x:Name="StatusCombo" Template="{DynamicResource ComboBoxControlCustom}"
                                  Width="150" HorizontalAlignment="Left" Margin="0,0,10,15" Padding="10,2,10,2"
                                  SelectedItem="{Binding newItem.jiraCase.status, 
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                                  ItemsSource="{Binding mainViewModel.gridViewModel.suite.jiraProject.caseStatuses,  Mode=OneWay, NotifyOnSourceUpdated=True}">

                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>


            <Label Content="Component" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}"  />
            <TextBox 
                     Text="{Binding Path=newItem.jiraCase.component.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Labels" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}" VerticalAlignment="Top" Width="45"/>
                <!--<ListBox ItemsSource="{Binding Path=newItem.jiraCase.labels}" />-->
                <WrapPanel Grid.Column="1" x:Name="LabelsPanel" MaxWidth="250">
                    <!--<Label Content="None"></Label>-->
                </WrapPanel>
            </Grid>
           
        </StackPanel>
        <StackPanel Margin="15,10,15,15" Grid.Column="1">
            <Label Content="Execution" FontSize="16" FontWeight="Bold" Margin="3,0,0,0" />

            <Label Content="Pre-conditions" FontStyle="{Binding managed, Converter={StaticResource BoolFontConverter}}"  />
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descPrecond, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
                     IsReadOnly="{Binding managed, Mode=OneWay, NotifyOnSourceUpdated=True}"
            />

            <Label Content="Execution steps" />
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descExecution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Content="Expected result" />
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.descExpected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
        </StackPanel>

        <StackPanel Margin="15,10,15,15" Grid.Column="2">
            <Label Content="Test" FontSize="16" Margin="3,0,0,0" />

            <Label Content="Assembly" />
            <TextBox 
                     Text="{Binding Path=newItem.callAss, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Content="Namespace" />
            <TextBox 
                     Text="{Binding Path=newItem.callSpace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Label Content="Type" />
            <TextBox 
                     Text="{Binding Path=newItem.callType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />

            <Button Content="Add test data" Command="{Binding newItem.AddTestDataCmd}" Width="299" Margin="0,10,0,0"/>
            <DataGrid Width="300"  MinHeight="140" MaxHeight="275"
                       ItemsSource="{Binding newItem.testDataColl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                       AutoGenerateColumns="False"         
                       x:Name="testDataGrid"
                       IsReadOnly="False"
                       CanUserAddRows="True"
                       RowDetailsVisibilityMode="Collapsed"
                       AlternatingRowBackground="{DynamicResource AlternateColorBrush}" 
                       AlternationCount="2"
                       ColumnHeaderStyle="{DynamicResource DatagridColumnHeaderTemplateStyle}"
                       RowHeaderStyle="{DynamicResource DataGridRowHeaderTemplateStyle}"
                       BorderThickness="2,2,2,2"
            >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Index" Binding="{Binding index, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Test data" Binding="{Binding data, UpdateSourceTrigger=PropertyChanged}" Width="*" MinWidth="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0" Margin="15,0,15,0">
            <Label Content="Notes" />
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" AutoWordSelection="True"
                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="82"
                     Text="{Binding Path=newItem.notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"
            />
        </StackPanel>

        <WrapPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,15,10" >
                    <StackPanel HorizontalAlignment="Left" Margin="0,0,60,3">
                        <Label Content="Import Jira case" HorizontalAlignment="Left" />
                        <ComboBox x:Name="CasesCombo" Template="{DynamicResource ComboBoxControlCustom}"
                                  MinWidth="150" MaxWidth="350"
                                  HorizontalAlignment="Left" Margin="0,0,10,0" Padding="10,2,10,2"
                                  SelectedItem="{Binding jiraSelectedCase, 
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                                  ItemsSource="{Binding mainViewModel.gridViewModel.suite.jiraProject.cases,  Mode=OneWay, NotifyOnSourceUpdated=True}">

                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding key}" Margin="0,0,5,0" MinWidth="60" />
                                        <TextBlock Text="{Binding labels[0]}" Margin="0,0,5,0" MinWidth="40"/>
                                        <TextBlock Text="{Binding name}" MaxWidth="240"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <Button IsDefault="True" Height="30" VerticalAlignment="Bottom"  Name="btnDialogOk" Click="btnDialogOk_Click" MinWidth="60" Margin="0,0,10,0">_Ok</Button>
                    <Button IsCancel="True" Height="30" VerticalAlignment="Bottom" MinWidth="60">_Cancel</Button>
            </WrapPanel>
    </Grid>
</Window>
